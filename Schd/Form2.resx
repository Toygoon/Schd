<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>